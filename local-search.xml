<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>first-post</title>
    <link href="/2020/10/04/first-post/"/>
    <url>/2020/10/04/first-post/</url>
    
    <content type="html"><![CDATA[<a id="more"></a>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux 配置LEMP环境</title>
    <link href="/2020/10/03/Linux-%E9%85%8D%E7%BD%AELEMP%E7%8E%AF%E5%A2%83/"/>
    <url>/2020/10/03/Linux-%E9%85%8D%E7%BD%AELEMP%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<h3 id="一、安装环境"><a href="#一、安装环境" class="headerlink" title="一、安装环境"></a>一、安装环境</h3><h4 id="1-安装Nginx"><a href="#1-安装Nginx" class="headerlink" title="1.安装Nginx"></a>1.安装Nginx</h4><pre><code class="hljs sql">sudo apt <span class="hljs-keyword">update</span>sudo apt <span class="hljs-keyword">install</span> nginxsudo ufw <span class="hljs-keyword">allow</span> <span class="hljs-string">&#x27;Nginx HTTP&#x27;</span></code></pre><a id="more"></a><h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><p>sudo ufw status</p><p>浏览器输入ip地址或域名</p><p>![image-20200330152040551](/Users/gloriazhang/Library/Application Support/typora-user-images/image-20200330152040551.png)</p><h4 id="2-安装MySQL"><a href="#2-安装MySQL" class="headerlink" title="2.安装MySQL"></a>2.安装MySQL</h4><pre><code class="hljs sql">sudo apt <span class="hljs-keyword">install</span> mysql-<span class="hljs-keyword">server</span></code></pre><p>mysql -u root -p</p><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo mysql_secure_installation</span></code></pre><p>Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 1</p><p>y</p><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo mysql</span></code></pre><pre><code class="hljs mysql">SELECT user,authentication_string,plugin,host FROM mysql.user;</code></pre><p>![image-20200330153604061](/Users/gloriazhang/Library/Application Support/typora-user-images/image-20200330153604061.png)</p><p>此时root用户通过 auth_socket插件进行身份验证，以下将root用户改成通过密码进行身份验证</p><p>password改成自己刚改密码</p><pre><code class="hljs mysql">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;</code></pre><pre><code class="hljs mysql">FLUSH PRIVILEGES;</code></pre><pre><code class="hljs mysql">SELECT user,authentication_string,plugin,host FROM mysql.user;</code></pre><p>![image-20200330152909122](/Users/gloriazhang/Library/Application Support/typora-user-images/image-20200330152909122.png)</p><p>有以上输出，则可以退出mysql</p><pre><code class="hljs mysql">exit</code></pre><p><strong>Note</strong>此时 sudo mysql 无法继续访问mysql，我们可以通过以下命令登入：</p><pre><code class="hljs ebnf"><span class="hljs-attribute">mysql -u root -p</span></code></pre><h5 id="ERROR-1819-HY000"><a href="#ERROR-1819-HY000" class="headerlink" title="ERROR 1819(HY000)"></a>ERROR 1819(HY000)</h5><p>如果出现 ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</p><p>则</p><p><code>sudo mysql_secure_installation</code></p><p>改一个强度高的密码</p><p>密码强度最好一百以上</p><p>Estimated strength of the password: 100 </p><p>q继续上述命令验证</p><h4 id="3-安装PHP并配置Nginx组件"><a href="#3-安装PHP并配置Nginx组件" class="headerlink" title="3.安装PHP并配置Nginx组件"></a>3.安装PHP并配置Nginx组件</h4><pre><code class="hljs smali">sudo<span class="hljs-built_in"> add-apt-repository </span>universe</code></pre><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> php-fpm php-mysql</code></pre><p>到此LEMP必要的组件已经安装完毕，帮极啦！不过仍然要进行一些配置更改，以使Nginx使用PHP处理器来处理动态内容。</p><h3 id="二、配置环境"><a href="#二、配置环境" class="headerlink" title="二、配置环境"></a>二、配置环境</h3><p>新建的服务器配置文件，Example.com 即是，可自主命名。</p><pre><code class="hljs awk">sudo vi <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-available/m</span>an.com</code></pre><p>如下</p><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;        <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;        <span class="hljs-attribute">root</span> /var/www/html;        <span class="hljs-attribute">index</span> index.php index.html index.htm index.nginx-debian.html;        <span class="hljs-attribute">server_name</span> man.com;        <span class="hljs-attribute">location</span> / &#123;                <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =<span class="hljs-number">404</span>;        &#125;        <span class="hljs-attribute">location</span> <span class="hljs-regexp">~ \.php$</span> &#123;                <span class="hljs-attribute">include</span> snippets/fastcgi-php.conf;                <span class="hljs-attribute">fastcgi_pass</span> unix:/var/run/php/php7.2-fpm.sock;        &#125;        <span class="hljs-attribute">location</span> <span class="hljs-regexp">~ /\.ht</span> &#123;                <span class="hljs-attribute">deny</span> all;        &#125;&#125;</code></pre><pre><code class="hljs awk">sudo ln -s <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-available/m</span>an.com <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-enabled/</span></code></pre><pre><code class="hljs gradle">sudo unlink <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-enabled/</span><span class="hljs-keyword">default</span></code></pre><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo nginx -t</span></code></pre><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo systemctl reload nginx</span></code></pre><h3 id="三、建一个PHP文件测试配置"><a href="#三、建一个PHP文件测试配置" class="headerlink" title="三、建一个PHP文件测试配置"></a>三、建一个PHP文件测试配置</h3><pre><code class="hljs awk">sudo nano <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/i</span>nfo.php</code></pre><p>配置如下</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>phpinfo();</code></pre><pre><code class="hljs awk">http:<span class="hljs-regexp">//y</span>our_server_domain_or_IP/info.php</code></pre><p>wow！配置成功！</p><p>![image-20200330164401080](/Users/gloriazhang/Library/Application Support/typora-user-images/image-20200330164401080.png)</p><p>最后，我们最好删除测试文件，因为它实际上可以为未经授权的用户提供有关您的配置的一些提示，这些提示可能有助于他人尝试闯入。</p><pre><code class="hljs awk">sudo rm <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/i</span>nfo.php</code></pre><h3 id="四、SSL证书配置"><a href="#四、SSL证书配置" class="headerlink" title="四、SSL证书配置"></a>四、SSL证书配置</h3><h4 id="1-需要准备"><a href="#1-需要准备" class="headerlink" title="1. 需要准备"></a>1. 需要准备</h4><p>   腾讯云证书，Nginx 服务，例： 1inc.cn</p><h4 id="2-证书安装"><a href="#2-证书安装" class="headerlink" title="2. 证书安装"></a>2. 证书安装</h4><h5 id="1）在-SSL-证书管理控制台-中下载并解压缩-www-domain-com-证书文件包到本地目录。"><a href="#1）在-SSL-证书管理控制台-中下载并解压缩-www-domain-com-证书文件包到本地目录。" class="headerlink" title="1）在 SSL 证书管理控制台 中下载并解压缩 www.domain.com 证书文件包到本地目录。"></a>1）在 <a href="https://console.cloud.tencent.com/ssl">SSL 证书管理控制台</a> 中下载并解压缩 <code>www.domain.com</code> 证书文件包到本地目录。</h5><p>解压缩后，可获得相关类型的证书文件。其中包含 Nginx 文件夹和 CSR 文件：</p><ul><li><strong>文件夹名称</strong>：Nginx</li><li>文件夹内容<ul><li><code>1_www.domain.com_bundle.crt</code> 证书文件</li><li><code>2_www.domain.com.key</code> 私钥文件</li></ul></li></ul><h5 id="2）使用文件传输工具例如-filezilla-将上面两个文件传到服务器上，移动到Nginx目录下"><a href="#2）使用文件传输工具例如-filezilla-将上面两个文件传到服务器上，移动到Nginx目录下" class="headerlink" title="2）使用文件传输工具例如 filezilla 将上面两个文件传到服务器上，移动到Nginx目录下"></a>2）使用文件传输工具例如 <a href="https://filezilla-project.org/download.php?platform=osx">filezilla</a> 将上面两个文件传到服务器上，移动到Nginx目录下</h5><p>![image-20200403132753503](/Users/gloriazhang/Library/Application Support/typora-user-images/image-20200403132753503.png)</p><h5 id="3）在-etc-nginx-sites-available-目录下新建一个配置文件"><a href="#3）在-etc-nginx-sites-available-目录下新建一个配置文件" class="headerlink" title="3）在 /etc/nginx/sites-available 目录下新建一个配置文件"></a>3）在 /etc/nginx/sites-available 目录下新建一个配置文件</h5><pre><code class="hljs awk">sudo vi <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-available/</span><span class="hljs-number">1</span>inc.cn</code></pre><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;        <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span>;        <span class="hljs-attribute">ssl</span> <span class="hljs-literal">on</span>;        <span class="hljs-attribute">root</span> /var/www/html;        <span class="hljs-attribute">index</span> index.php index.html index.htm index.nginx-debian.html;        <span class="hljs-attribute">server_name</span> www.1inc.cn;        <span class="hljs-attribute">ssl_certificate</span> 1_www.1inc.cn_bundle.crt;         <span class="hljs-attribute">ssl_certificate_key</span> 2_www.1inc.cn.key;         <span class="hljs-attribute">location</span> / &#123;                <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =<span class="hljs-number">404</span>;        &#125;        <span class="hljs-attribute">location</span> <span class="hljs-regexp">~ \.php$</span> &#123;                <span class="hljs-attribute">include</span> snippets/fastcgi-php.conf;                <span class="hljs-attribute">fastcgi_pass</span> unix:/var/run/php/php7.2-fpm.sock;        &#125;        <span class="hljs-attribute">location</span> <span class="hljs-regexp">~ /\.ht</span> &#123;                <span class="hljs-attribute">deny</span> all;        &#125;&#125;</code></pre><p>以下为官方配置文件，可参照更改</p><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;     <span class="hljs-comment">#SSL 访问端口号为 443</span>     <span class="hljs-attribute">ssl</span> <span class="hljs-literal">on</span>;      <span class="hljs-comment">#填写绑定证书的域名</span>     <span class="hljs-attribute">server_name</span> <span class="hljs-regexp">www.*</span>*<span class="hljs-regexp">*.cn</span>;      <span class="hljs-comment">#证书文件名称</span>     <span class="hljs-attribute">ssl_certificate</span> 1_www.1inc.cn_bundle.crt;      <span class="hljs-comment">#私钥文件名称</span>     <span class="hljs-attribute">ssl_certificate_key</span> 2_www.1inc.cn.key;      <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;     <span class="hljs-comment">#请按照以下协议配置</span>     <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;      <span class="hljs-comment">#请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。</span>     <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;      <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;     <span class="hljs-attribute">location</span> / &#123;        <span class="hljs-comment">#网站主页路径。此路径仅供参考，具体请您按照实际目录操作。</span>         <span class="hljs-attribute">root</span> /var/www/html/<span class="hljs-regexp">www.*</span>*<span class="hljs-regexp">*.cn</span>;          <span class="hljs-attribute">index</span>  index.html index.htm;     &#125; &#125;</code></pre><h5 id="4）创建链接启动服务器"><a href="#4）创建链接启动服务器" class="headerlink" title="4）创建链接启动服务器"></a>4）创建链接启动服务器</h5><pre><code class="hljs awk">sudo ln -s <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-available/</span><span class="hljs-number">1</span>inc.cn <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-enabled/</span></code></pre><h5 id="5）然后，从-sites-enabled-目录中取消默认配置文件的链接："><a href="#5）然后，从-sites-enabled-目录中取消默认配置文件的链接：" class="headerlink" title="5）然后，从/ sites-enabled /目录中取消默认配置文件的链接："></a>5）然后，从/ sites-enabled /目录中取消默认配置文件的链接：</h5><pre><code class="hljs gradle">sudo unlink <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/sites-enabled/</span><span class="hljs-keyword">default</span></code></pre><p>#####6）检查配置文件，直到不出错</p><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo nginx -t</span></code></pre><p>![image-20200403133538833](/Users/gloriazhang/Library/Application Support/typora-user-images/image-20200403133538833.png)</p><p>7）最后，重新加载Nginx进行必要的更改</p><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo systemctl reload nginx</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hello hexo markdown</title>
    <link href="/2020/10/03/hello-hexo-markdown/"/>
    <url>/2020/10/03/hello-hexo-markdown/</url>
    
    <content type="html"><![CDATA[<p>我是短小精悍的文章摘要(๑•̀ㅂ•́)</p><a id="more"></a><p>我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文我是正文</p>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>hero</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hello hexo markdown</title>
    <link href="/2020/10/03/hello-world/"/>
    <url>/2020/10/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><pre><code class="hljs plain"></code></pre><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>hero</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
